include "values"
include "std/ptr"

.ifdef std_memory_data .error "std_memory_data is already defined :c" .end
.ifdef std_memory_byte .error "std_memory_byte is already defined :c" .end

.ifdef memset undef memset .end

memory std_memory_data sizeof(ptr) end
memory std_memory_byte sizeof(u64) end

fn memset
  ptr # data
  int # size
  int # byte
  --
  ptr # data
in
  cast(int) std_memory_data !64
  std_memory_byte !64
  std_memory_data @ptr swap
  while
    std_memory_byte @64 std_memory_data @ptr !
    std_memory_data inc64
    1 -
    dup 1 < if drop 0 end 
  end
  drop  
end