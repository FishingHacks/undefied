include "./use-lnx"
include "std/lnx/syscalls"
include "values"
include "std/int"

.ifdef MAP_SHARED undef MAP_SHARED .end
.ifdef MAP_PRIVATE undef MAP_PRIVATE .end
.ifdef MAP_SHARED_VALIDATE undef MAP_SHARED_VALIDATE .end
.ifdef MAP_TYPE undef MAP_TYPE .end
.ifdef MAP_FIXED undef MAP_FIXED .end
.ifdef MAP_ANON undef MAP_ANON .end
.ifdef MAP_ANONYMOUS undef MAP_ANONYMOUS .end
.ifdef MAP_NORESERVE undef MAP_NORESERVE .end
.ifdef MAP_GROWSDOWN undef MAP_GROWSDOWN .end
.ifdef MAP_DENYWRITE undef MAP_DENYWRITE .end
.ifdef MAP_EXECUTABLE undef MAP_EXECUTABLE .end
.ifdef MAP_LOCKED undef MAP_LOCKED .end
.ifdef MAP_POPULATE undef MAP_POPULATE .end
.ifdef MAP_NONBLOCK undef MAP_NONBLOCK .end
.ifdef MAP_STACK undef MAP_STACK .end
.ifdef MAP_HUGETLB undef MAP_HUGETLB .end
.ifdef MAP_SYNC undef MAP_SYNC .end
.ifdef MAP_FIXED_NOREPLACE undef MAP_FIXED_NOREPLACE .end
.ifdef MAP_FILE undef MAP_FILE .end
.ifdef PROT_NONE undef PROT_NONE .end
.ifdef PROT_READ undef PROT_READ .end
.ifdef PROT_WRITE undef PROT_WRITE .end
.ifdef PROT_EXEC undef PROT_EXEC .end
.ifdef PROT_GROWSDOWN undef PROT_GROWSDOWN .end
.ifdef PROT_GROWSUP undef PROT_GROWSUP .end
.ifdef malloc undef malloc .end
.ifdef free undef free .end
.ifdef MEM_CHUNK undef MEM_CHUNK .end
.ifdef makesz undef makesz .end

const MAP_SHARED     0x01 end
const MAP_PRIVATE    0x02 end
const MAP_SHARED_VALIDATE 0x03 end
const MAP_TYPE       0x0f end
const MAP_FIXED      0x10 end
const MAP_ANON       0x20 end
const MAP_ANONYMOUS  0x20 end
const MAP_NORESERVE  0x4000 end
const MAP_GROWSDOWN  0x0100 end
const MAP_DENYWRITE  0x0800 end
const MAP_EXECUTABLE 0x1000 end
const MAP_LOCKED     0x2000 end
const MAP_POPULATE   0x8000 end
const MAP_NONBLOCK   0x10000 end
const MAP_STACK      0x20000 end
const MAP_HUGETLB    0x40000 end
const MAP_SYNC       0x80000 end
const MAP_FIXED_NOREPLACE 0x100000 end
const MAP_FILE       0 end

const PROT_NONE      0 end
const PROT_READ      1 end
const PROT_WRITE     2 end
const PROT_EXEC      4 end
const PROT_GROWSDOWN 0x01000000 end
const PROT_GROWSUP   0x02000000 end

fn malloc
  int
  --
  ptr
in
  dup 0 swap 0 1 - swap MAP_PRIVATE MAP_ANONYMOUS or swap PROT_READ PROT_WRITE or swap 1 + nullptr SC_mmap
  dup cast(int) 0 1 - = if drop drop nullptr return end
  swap over !8
  cast(int) 1 + cast(ptr)
end

fn free ptr in
  dup nullptr = if drop return end
  cast(int) 1 - cast(ptr)
  dup @8
  swap SC_munmap drop
end

const MEM_CHUNK 4 1024 * end # 4096 bytes = 4KiB

fn makesz int -- int in
  dup MEM_CHUNK mod MEM_CHUNK swap - +
end